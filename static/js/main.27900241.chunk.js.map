{"version":3,"sources":["App.js","serviceWorkerRegistration.js","index.js"],"names":["ImageGenerator","_ref","prompt","setPrompt","generateImage","image","loading","React","createElement","className","type","value","onChange","e","target","placeholder","onClick","disabled","src","alt","PodcastGenerator","pdfFile","setPdfFile","useState","textInput","setTextInput","accept","files","style","marginTop","rows","backgroundColor","color","border","padding","borderRadius","width","resize","handleGeneratePodcast","trim","alert","MusicGenerator","noLyrics","setNoLyrics","startingLyrics","setStartingLyrics","description","setDescription","tempo","setTempo","mood","setMood","theme","setTheme","marginBottom","display","checked","handleGenerateMusic","Placeholder","_ref2","name","App","setImage","setLoading","sidebarOpen","setSidebarOpen","activeFeature","setActiveFeature","async","response","fetch","method","headers","Authorization","Content-Type","body","JSON","stringify","inputs","contentType","get","includes","json","error","blob","imageObjectURL","URL","createObjectURL","aria-label","renderFeature","Boolean","window","location","hostname","match","ReactDOM","createRoot","document","getElementById","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.27900241.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\n\n// IMAGE GENERATOR COMPONENT\nconst ImageGenerator = ({ prompt, setPrompt, generateImage, image, loading }) => (\n  <div className=\"image-generator\">\n    <h2 className=\"image-generator-title\">\n      <span className=\"highlight-dark\">AI</span> IMAGE GENERATOR\n    </h2>\n    <div className=\"input-section\">\n      <input\n        type=\"text\"\n        value={prompt}\n        onChange={(e) => setPrompt(e.target.value)}\n        placeholder=\"Enter your prompt here...\"\n      />\n      <button onClick={generateImage} disabled={loading}>\n        {loading ? \"Generating...\" : \"Generate Image\"}\n      </button>\n    </div>\n    {image && <img src={image} alt=\"Generated\" className=\"generated-image\" />}\n  </div>\n);\n\n// PODCAST GENERATOR COMPONENT\nconst PodcastGenerator = () => {\n  const [pdfFile, setPdfFile] = useState(null);\n  const [textInput, setTextInput] = useState(\"\");\n\n  const handlePDFUpload = (e) => {\n    setPdfFile(e.target.files[0]);\n    setTextInput(\"\");\n  };\n\n  const handleTextChange = (e) => {\n    setTextInput(e.target.value);\n    setPdfFile(null);\n  };\n\n  const handleGeneratePodcast = () => {\n    if (!pdfFile && !textInput.trim()) {\n      alert(\"Please upload a PDF or enter some text.\");\n      return;\n    }\n    alert(\"Podcast generation started (mock)...\");\n  };\n\n  return (\n    <div className=\"podcast-generator\">\n      <h2 className=\"image-generator-title\">\n        <span className=\"highlight-dark\">AI</span> PODCAST GENERATOR\n      </h2>\n      <div className=\"input-section\">\n        <label>Upload any Document:</label>\n        <input type=\"file\" accept=\".pdf\" onChange={handlePDFUpload} />\n\n        <p style={{ marginTop: \"1rem\" }}>Or Enter Text Below:</p>\n        <textarea\n          rows={6}\n          placeholder=\"Enter your content here...\"\n          value={textInput}\n          onChange={handleTextChange}\n          style={{\n            backgroundColor: \"#2c2c2e\",\n            color: \"#f1f1f1\",\n            border: \"1px solid #444\",\n            padding: \"10px\",\n            borderRadius: \"6px\",\n            width: \"100%\",\n            resize: \"vertical\",\n          }}\n        />\n        <button onClick={handleGeneratePodcast} style={{ marginTop: \"1rem\" }}>\n          Generate!\n        </button>\n      </div>\n    </div>\n  );\n};\n\n// MUSIC GENERATOR COMPONENT\nconst MusicGenerator = () => {\n  const [noLyrics, setNoLyrics] = useState(false);\n  const [startingLyrics, setStartingLyrics] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [tempo, setTempo] = useState(\"\");\n  const [mood, setMood] = useState(\"\");\n  const [theme, setTheme] = useState(\"\");\n\n  const handleGenerateMusic = () => {\n    alert(\"Music generation started (mock)...\");\n  };\n\n  return (\n    <div className=\"music-generator\">\n      <h2 className=\"image-generator-title\">\n        <span className=\"highlight-dark\">AI</span> MUSIC GENERATOR\n      </h2>\n      <div className=\"input-section\">\n\n        <label style={{ color: \"white\" }}>Tempo</label>\n        <select\n          value={tempo}\n          onChange={(e) => setTempo(e.target.value)}\n          style={{ marginBottom: \"0.5rem\", width: \"100%\", padding: \"8px\", backgroundColor: \"#2c2c2e\", color: \"white\", border: \"1px solid #444\" }}\n        >\n          <option value=\"\">Select Tempo</option>\n          <option value=\"slow\">Slow</option>\n          <option value=\"medium\">Medium</option>\n          <option value=\"fast\">Fast</option>\n          <option value=\"very-fast\">Very Fast</option>\n        </select>\n\n        <label style={{ color: \"white\" }}>Mood</label>\n        <select\n          value={mood}\n          onChange={(e) => setMood(e.target.value)}\n          style={{ marginBottom: \"0.5rem\", width: \"100%\", padding: \"8px\", backgroundColor: \"#2c2c2e\", color: \"white\", border: \"1px solid #444\" }}\n        >\n          <option value=\"\">Select Mood</option>\n          <option value=\"happy\">Happy</option>\n          <option value=\"sad\">Sad</option>\n          <option value=\"energetic\">Energetic</option>\n          <option value=\"calm\">Calm</option>\n          <option value=\"romantic\">Romantic</option>\n          <option value=\"nostalgic\">Nostalgic</option>\n        </select>\n\n        <label style={{ color: \"white\" }}>Theme</label>\n        <select\n          value={theme}\n          onChange={(e) => setTheme(e.target.value)}\n          style={{ marginBottom: \"0.5rem\", width: \"100%\", padding: \"8px\", backgroundColor: \"#2c2c2e\", color: \"white\", border: \"1px solid #444\" }}\n        >\n          <option value=\"\">Select Theme</option>\n          <option value=\"cyber\">Cyber</option>\n          <option value=\"life\">Life</option>\n          <option value=\"motivation\">Nature</option>\n          <option value=\"crime\">Crime</option>\n          <option value=\"love\">Love</option>\n          <option value=\"sadness\">Sadness</option>\n          <option value=\"happiness\">Happiness</option>\n          <option value=\"nostalgia\">Nostalgia</option>\n          <option value=\"adventure\">Adventure</option>\n          <option value=\"mystery\">Mystery</option>\n          <option value=\"fantasy\">Fantasy</option>\n        </select>\n\n        {!noLyrics && (\n          <input\n            type=\"text\"\n            placeholder=\"Starting Lyrics\"\n            value={startingLyrics}\n            onChange={(e) => setStartingLyrics(e.target.value)}\n            style={{\n              width: \"100%\",\n              padding: \"8px\",\n              backgroundColor: \"#2c2c2e\",\n              color: \"white\",\n              border: \"1px solid #444\",\n              marginBottom: \"0.5rem\"\n            }}\n          />\n        )}\n\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n          style={{\n            width: \"100%\",\n            padding: \"8px\",\n            backgroundColor: \"#2c2c2e\",\n            color: \"white\",\n            border: \"1px solid #444\",\n            marginBottom: \"0.5rem\"\n          }}\n        />\n\n        <label style={{ display: \"block\", color: \"white\", marginBottom: \"1rem\" }}>\n          <input type=\"checkbox\" checked={noLyrics} onChange={() => setNoLyrics(!noLyrics)} />\n          No Lyrics\n        </label>\n\n        <button onClick={handleGenerateMusic}>Generate Music!</button>\n      </div>\n    </div>\n  );\n};\n\n// DEFAULT PLACEHOLDER FOR OTHER FEATURES\nconst Placeholder = ({ name }) => (\n  <div className=\"placeholder-feature\">\n    <h2>{name}</h2>\n    <p>This feature is coming soon.</p>\n  </div>\n);\n\n// MAIN APP\nfunction App() {\n  const [prompt, setPrompt] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [sidebarOpen, setSidebarOpen] = useState(false);\n  const [activeFeature, setActiveFeature] = useState(\"image-generator\");\n\n  const generateImage = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch(\n        \"https://api-inference.huggingface.co/models/black-forest-labs/FLUX.1-dev\",\n        {\n          method: \"POST\",\n          headers: {\n            Authorization: \"Bearer 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\",\n            \"Content-Type\": \"application/json\",\n          },\n          body: JSON.stringify({ inputs: prompt }),\n        }\n      );\n\n      const contentType = response.headers.get(\"content-type\");\n      if (contentType && contentType.includes(\"application/json\")) {\n        const json = await response.json();\n        alert(\"Error: \" + (json.error || \"Unknown error from API\"));\n        setLoading(false);\n        return;\n      }\n\n      const blob = await response.blob();\n      const imageObjectURL = URL.createObjectURL(blob);\n      setImage(imageObjectURL);\n    } catch (error) {\n      alert(\"Failed to generate image, please try again.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const renderFeature = () => {\n    switch (activeFeature) {\n      case \"image-generator\":\n        return (\n          <ImageGenerator\n            prompt={prompt}\n            setPrompt={setPrompt}\n            generateImage={generateImage}\n            image={image}\n            loading={loading}\n          />\n        );\n      case \"ai-podcast\":\n        return <PodcastGenerator />;\n      case \"music-generator\":\n        return <MusicGenerator />;\n      case \"ai-hotline\":\n        return <Placeholder name=\"AI Hotline\" />;\n      case \"grammar-helper\":\n        return <Placeholder name=\"AI Grammar Helper\" />;\n      case \"notes-to-podcast\":\n        return <Placeholder name=\"Notes to Podcast\" />;\n      case \"project-helper\":\n        return <Placeholder name=\"Project Helper\" />;\n      case \"chatbot\":\n        return <Placeholder name=\"AI Chat Bot\" />;\n      default:\n        return <div>Select a feature</div>;\n    }\n  };\n\n  return (\n    <div className=\"app dark-mode\">\n      <header className=\"hero-section\">\n        <div className=\"logo-text-container\">\n          <h1 className=\"gradient-title\">Everything.ai</h1>\n          <p className=\"tagline\">simply for everything</p>\n          <button\n            className=\"menu-dot\"\n            onClick={() => setSidebarOpen(!sidebarOpen)}\n            aria-label=\"Toggle menu\"\n          />\n        </div>\n      </header>\n\n      <div className=\"main-layout\">\n        {sidebarOpen && (\n          <aside className=\"sidebar\">\n            <h2 className=\"sidebar-heading\">Other Features</h2>\n            <ul className=\"sidebar-menu\">\n              <li onClick={() => setActiveFeature(\"image-generator\")}>🎨 AI Image Generator</li>\n              <li onClick={() => setActiveFeature(\"ai-podcast\")}>🎙️ AI Podcast Generator</li>\n              <li onClick={() => setActiveFeature(\"music-generator\")}>🎵 Music Generator</li>\n              <li onClick={() => setActiveFeature(\"ai-hotline\")}>📞 AI Hotline</li>\n              <li onClick={() => setActiveFeature(\"grammar-helper\")}>✍️ Grammar Helper</li>\n              <li onClick={() => setActiveFeature(\"notes-to-podcast\")}>🗒️ Notes to Podcast</li>\n              <li onClick={() => setActiveFeature(\"project-helper\")}>📚 Project Helper</li>\n              <li onClick={() => setActiveFeature(\"chatbot\")}>🤖 AI Chat Bot</li>\n            </ul>\n          </aside>\n        )}\n        <main className=\"main-content\">{renderFeature()}</main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n//import reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}